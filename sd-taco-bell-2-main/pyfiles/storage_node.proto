syntax = "proto3";

package storage;

service StorageService {
    // UUID Management
    rpc RequestUUID (UUIDRequest) returns (UUIDResponse) {}
    rpc ValidateUUID (UUIDValidation) returns (UUIDResponse) {}
    
    // File Operations
    rpc UploadFile (stream FileChunk) returns (FileResponse) {}
    rpc RequestFile (FileRequest) returns (stream FileChunk) {}
    rpc DeleteFile (FileDelete) returns (FileResponse) {}

    rpc Heartbeat(stream HeartbeatRequest) returns (stream HeartbeatResponse) {}

}

message HeartbeatRequest {
    string uuid = 1;
    int64 timestamp = 2;
    int32 file_service_port = 3;
    double storage_capacity_mb = 4;
    string hostname = 5;
}

message HeartbeatResponse {
    bool success = 1;
    string message = 2;
}

message UUIDRequest {
    string type = 1;  // "request_uuid" or "send_uuid"
    double storage_capacity_mb = 2;
    string hostname = 3;
}

message UUIDResponse {
    bool success = 1;
    string uuid = 2;
    string message = 3;
}

message UUIDValidation {
    string uuid = 1;
    double storage_capacity_mb = 2;
    string hostname = 3;
}

message FileChunk {
    bytes content = 1;
    string filename = 2;
    uint64 offset = 3;
    uint64 total_size = 4;
}

message FileRequest {
    string filename = 1;
}

message FileDelete {
    string filename = 1;
}

message DeleteResponse {
    bool success = 1;
    string message = 2;
}

message FileResponse {
    bool success = 1;
    string message = 2;
    uint64 size = 3;
}